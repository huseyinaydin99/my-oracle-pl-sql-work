DESC REGIONS;

CREATE
TABLE REGIONS_LOG(
  REGION_ID NUMBER,
  REGION_NAME VARCHAR2(25),
  WHOIS VARCHAR2(30),
  NEZAMAN DATE,
  NEYAPTI VARCHAR2(10)
);

SELECT *
FROM REGIONS_LOG;

SELECT *
FROM REGIONS;

INSERT
INTO REGIONS
VALUES(
  5, 'AVUSTURALYAA'
);
COMMIT;

UPDATE REGIONS
SET REGION_NAME = 'AUSTURALYAAA'
WHERE REGION_ID = 5;
COMMIT;

DELETE
FROM REGIONS
WHERE REGION_ID = 5;
COMMIT;

CREATE OR REPLACE
TRIGGER REGIONS_AUDIT_TRG
AFTER
INSERT OR UPDATE OR DELETE
ON REGIONS
FOR EACH ROW --TUM KOLANLAR UZERINDE TETIKLENMESI ICINDIR
DECLARE
  WISLEM VARCHAR2(10);
BEGIN
  WISLEM := CASE
    WHEN INSERTING
      THEN 'INSERT'
    WHEN UPDATING
      THEN 'UPDATE'
    WHEN DELETING
      THEN 'DELETE'
  END;

  IF INSERTING THEN
    INSERT
    INTO REGIONS_LOG(
      REGION_ID,
      REGION_NAME,
      WHOIS,
      NEZAMAN,
      NEYAPTI
    )
    VALUES(
      :NEW.REGION_ID,
      :NEW.REGION_NAME,
      USER, --CONNECT OLAN KULLANICIDIR
      SYSDATE,
      WISLEM
    ); --ESKILERI KAYDETTIK
  END IF;

  IF UPDATING THEN
    INSERT
    INTO REGIONS_LOG(
      REGION_ID,
      REGION_NAME,
      WHOIS,
      NEZAMAN,
      NEYAPTI
    )
    VALUES(
      :OLD.REGION_ID,
      :OLD.REGION_NAME,
      USER, --CONNECT OLAN KULLANICIDIR
      SYSDATE,
      WISLEM
    ); --ESKILERI KAYDETTIK
    INSERT
    INTO REGIONS_LOG(
      REGION_ID,
      REGION_NAME,
      WHOIS,
      NEZAMAN,
      NEYAPTI
    )
    VALUES(
      NVL(:NEW.REGION_ID, :OLD.REGION_ID),
      NVL(:NEW.REGION_NAME, :OLD.REGION_NAME),
      USER, --CONNECT OLAN KULLANICIDIR
      SYSDATE,
      WISLEM || '_2'
    );
  END IF;

  IF DELETING THEN
    INSERT
    INTO REGIONS_LOG(
      REGION_ID,
      REGION_NAME,
      WHOIS,
      NEZAMAN,
      NEYAPTI
    )
    VALUES(
      :OLD.REGION_ID,
      :OLD.REGION_NAME,
      USER, --CONNECT OLAN KULLANICIDIR
      SYSDATE,
      WISLEM
    ); --ESKILERI KAYDETTIK
  END IF;
END;
